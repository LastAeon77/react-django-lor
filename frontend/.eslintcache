[{"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\index.js":"1","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\App.js":"3","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\DeckList.js":"4","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\CardList.js":"5","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\HomePage.js":"6","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\navbar.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":875,"mtime":1610606210930,"results":"11","hashOfConfig":"9"},{"size":5202,"mtime":1610782315698,"results":"12","hashOfConfig":"9"},{"size":5309,"mtime":1610780160238,"results":"13","hashOfConfig":"9"},{"size":334,"mtime":1610185026427,"results":"14","hashOfConfig":"9"},{"size":1003,"mtime":1610606143364,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1h30m9e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\App.js",[],"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\DeckList.js",["34","35"],"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\CardList.js",["36","37","38","39"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Container, Col, Row, Table } from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Link,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nconst BUCKETNAME = \"http://aeonmoon.herokuapp.com/static/\"\r\nclass CardSingle extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cardData: [],\r\n            currentOffice: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let topicId = window.location.href.split('/').pop()\r\n        axios.get(`/lor/api/card/${topicId}`).then(res => this.setState({ cardData: res })).catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { data } = this.state.cardData\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1><b>{data?.Name}</b></h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <img src={`${BUCKETNAME}${data?.ImgPath}`} />\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <p>Rarity: {data?.Rarity}</p>\r\n                            <p>Rank: {data?.office.Rank}</p>\r\n                            <p>Guest: {data?.office.Name}<img src={`${BUCKETNAME}${data?.office.ImgPath}`} height='200px'/></p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Dice #</th>\r\n                                        <th>Damage Rolls</th>\r\n                                        <th>Dice Type</th>\r\n                                        <th>Dice Effect</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>1</td>\r\n                                        <td>{data?.Roll1}</td>\r\n                                        <td>{data?.Type1}</td>\r\n                                        <td>{data?.Eff1}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>2</td>\r\n                                        <td>{data?.Roll2}</td>\r\n                                        <td>{data?.Type2}</td>\r\n                                        <td>{data?.Eff2}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>3</td>\r\n                                        <td>{data?.Roll3}</td>\r\n                                        <td>{data?.Type3}</td>\r\n                                        <td>{data?.Eff3}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>4</td>\r\n                                        <td>{data?.Roll4}</td>\r\n                                        <td>{data?.Type4}</td>\r\n                                        <td>{data?.Eff4}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default class CardHome extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cardList: [],\r\n            officeList: [],\r\n            currentItem: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"/lor/api/card/\")\r\n            .then(res => { this.setState({ cardList: res.data }) })\r\n            .catch(err => console.log(err))\r\n        axios.get(\"/lor/api/office/\")\r\n            .then(res => { this.setState({ officeList: res.data }) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CardHomeRoute cardList={this.state.cardList} officeList={this.state.officeList} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardHomeRoute({ cardList, officeList }) {\r\n    let { path, url } = useRouteMatch();\r\n    const createCardList = (officeName) => {\r\n        var cardInOffice = cardList.filter(card => card.office.Name === officeName);\r\n        return cardInOffice.map((c) =>\r\n            <li><Link to={`${url}/${c.id}`} >\r\n                {c.Name}\r\n            </Link ></li >\r\n        )\r\n    }\r\n\r\n    const createList = officeList.map((item) => (\r\n        <>\r\n            <h3>{item.Name}</h3>\r\n            <ul>\r\n                {createCardList(item.Name)}\r\n            </ul>\r\n        </>\r\n    )\r\n    )\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    {createList}\r\n                </Route>\r\n                <Route path={`${path}/:topicId`} component={CardSingle} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}","C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\HomePage.js",[],"C:\\Users\\User-Dell\\Desktop\\Computer Science\\GitHubWorthy\\ReactWithDjango\\LibraryOfRuinaPage-master\\frontend\\src\\components\\navbar.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":22,"nodeType":"46","messageId":"47","endLine":5,"endColumn":28},{"ruleId":"48","severity":1,"message":"49","line":41,"column":55,"nodeType":"50","endLine":41,"endColumn":128},{"ruleId":"44","severity":1,"message":"45","line":5,"column":22,"nodeType":"46","messageId":"47","endLine":5,"endColumn":28},{"ruleId":"44","severity":1,"message":"51","line":10,"column":5,"nodeType":"46","messageId":"47","endLine":10,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":37,"column":29,"nodeType":"50","endLine":37,"endColumn":74},{"ruleId":"48","severity":1,"message":"49","line":43,"column":58,"nodeType":"50","endLine":43,"endColumn":124},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]